{
  "0": {
    "createdAt": "2025-08-13T15:36:26.300Z",
    "updatedAt": "2025-09-14T18:19:11.538Z",
    "id": "N0uW8xSUhcWlaT0A",
    "name": "Auto Gmail Labeling",
    "active": true,
    "isArchived": false,
    "nodes": [
      {
        "parameters": {
          "options": {}
        },
        "id": "5e575d7c-8e9d-43b4-99c9-b7f567497bba",
        "name": "Loop Over Items",
        "type": "n8n-nodes-base.splitInBatches",
        "position": [
          112,
          64
        ],
        "typeVersion": 3
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "version": 2,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "2f466934-e257-4315-8a7f-5e3dde987430",
                "operator": {
                  "name": "filter.operator.equals",
                  "type": "string",
                  "operation": "equals"
                },
                "leftValue": "={{ $json.labelIds[2] }}",
                "rightValue": "={{ $json.labelIds[2] }}"
              }
            ]
          },
          "options": {}
        },
        "id": "04c63195-b918-487c-baaf-58e0badb0744",
        "name": "If",
        "type": "n8n-nodes-base.if",
        "position": [
          592,
          224
        ],
        "typeVersion": 2.2
      },
      {
        "parameters": {},
        "id": "bf1035eb-a35b-404a-b5a7-d4a772cc72da",
        "name": "Merge",
        "type": "n8n-nodes-base.merge",
        "position": [
          784,
          80
        ],
        "typeVersion": 3.1
      },
      {
        "parameters": {
          "operation": "getAll",
          "limit": 200,
          "simple": false,
          "filters": {
            "labelIds": [],
            "readStatus": "both",
            "receivedAfter": ""
          },
          "options": {}
        },
        "id": "e62ae8fa-3867-481d-9680-6f78dedb852a",
        "name": "Gmail - Get All Messages",
        "type": "n8n-nodes-base.gmail",
        "position": [
          1392,
          -576
        ],
        "webhookId": "a501a86b-b2df-45ec-b0d9-178765859a0f",
        "typeVersion": 2.1,
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "operation": "get",
          "messageId": "={{ $json.id }}",
          "simple": false,
          "options": {}
        },
        "id": "3da8b12d-d623-4ae3-bf37-d29ab7142048",
        "name": "Gmail - Single Message",
        "type": "n8n-nodes-base.gmail",
        "position": [
          384,
          64
        ],
        "webhookId": "ebc7d7c4-aece-4cd4-a46f-dff18891931e",
        "typeVersion": 2.1,
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "content": "## Auto Gmail Labeling (Powered by OpenAI)",
          "height": 860,
          "width": 3220,
          "color": 3
        },
        "id": "1cd61fba-68c1-488b-947a-4fda01d4c952",
        "name": "Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          0,
          -384
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "2e246278-eccb-4cd5-8c93-7daa824066e3",
                "name": "id",
                "type": "string",
                "value": "={{ $json.id }}"
              },
              {
                "id": "06e5dde5-dfce-4d4d-859d-b364301cb5aa",
                "name": "from",
                "type": "string",
                "value": "={{ $json.headers.from }}"
              },
              {
                "id": "e10231b9-fbb1-447a-a3fc-3ba8e5a9d314",
                "name": "headers.subject",
                "type": "string",
                "value": "={{ $json.headers.subject }}"
              },
              {
                "id": "6a472d41-0f6e-4803-8d94-4b4f8272e66c",
                "name": "text",
                "type": "string",
                "value": "={{ $json.text }}"
              }
            ]
          },
          "options": {}
        },
        "id": "67337c02-ecc4-4558-b727-1f7d3a1d3115",
        "name": "Extract Email Data",
        "type": "n8n-nodes-base.set",
        "position": [
          1040,
          80
        ],
        "typeVersion": 3.4
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=<instructions>\nYou are a highly specialized AI designed to act as a personal email labeler. Your only function is to analyze the content of an email and assign a single, specific label from a predefined list.\n\nYou must adhere to the following rules:\n    Read the provided email subject and body to determine the context.\n    Choose the ONE label that fits the email best.\n    Output ONLY the exact text of the label, without leading or trailing spaces. Do not add any extra text, punctuation, or explanations.\n</instructions>\n\n<labels>\nNewsletter, Inquiry, Invoice, Proposal, Action Required, Follow-up Reminder, Task, Personal, Urgent, Bank, Job Update, Spam / Junk, Social / Networking, Receipt, Event Invite, Subscription Renewal, System Notification\n</labels>\n\n<labeling_logic>\nNewsletter: Use this label for subscription updates, promotional emails, or informational digests that do not require a response or action.\nInquiry: Use this label when the sender is asking you a question or requesting information.\nInvoice: Use this label for billing statements, payment requests, or overdue payment notices.\nProposal: Use this label for business offers, contracts, collaboration pitches, and formal bids.\nAction Required: Use this label for emails that demand you complete a specific task, such as booking an appointment, confirming an account, or filling out a form.\nFollow-up Reminder: Use this label for emails that are a reminder about something pending or a previous action you took.\nTask: Use this label for emails that contain a list of to-do items or specific steps for a project.\nPersonal: Use this label for emails from friends or family members that are not work-related.\nUrgent: Use this label for critical, time-sensitive emails with immediate deadlines or emergencies. This label takes precedence over others if the email's content explicitly indicates high time pressure.\nBank: Use this label for statements, alerts, or transaction notices from a financial institution.\nJob Update: Use this label for direct messages from recruiters, HR, or alerts from job portals (e.g., LinkedIn).\nSpam / Junk: Use this label for unwanted bulk mail, phishing attempts, or obvious advertisements.\nSocial / Networking: Use this label for notifications from social media platforms or online forums that are not job-related.\nReceipt: Use this label for one-time purchase confirmations, order summaries, or tickets.\nEvent Invite: Use this label for calendar invitations or RSVPs for meetings or events.\nSubscription Renewal: Use this label for reminders about upcoming renewals of software licenses, memberships, or domains.\nSystem Notification: Use this label for automated alerts from monitoring tools, cloud services, or security scanners.\n</labeling_logic>\n\n<email>\nHere are the details of the email to analyze:\nFrom: {{ $('Merge').item.json.headers.from }}\nSubject line: {{ $json.headers.subject }}\nEmail Body: \n{{ $json.text }}\n</email>",
          "hasOutputParser": true,
          "options": {
            "systemMessage": ""
          }
        },
        "id": "fdc82cbd-226c-4997-9079-81963930b8d7",
        "name": "Categorize Email with AI",
        "type": "@n8n/n8n-nodes-langchain.agent",
        "position": [
          1248,
          80
        ],
        "typeVersion": 1.7
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "2494d69d-3e5e-42ba-88d2-b76ca1962881",
                "name": "output",
                "type": "string",
                "value": "={{ $json.output.trim() }}"
              }
            ]
          },
          "options": {}
        },
        "id": "99c28ffe-80d9-432b-8303-b46e2b8815e7",
        "name": "Store AI Category",
        "type": "n8n-nodes-base.set",
        "position": [
          1600,
          80
        ],
        "typeVersion": 3.4
      },
      {
        "parameters": {
          "resource": "label",
          "returnAll": true
        },
        "id": "730d460c-a160-4bec-8252-f9231f293938",
        "name": "List All Gmail Labels",
        "type": "n8n-nodes-base.gmail",
        "position": [
          1888,
          80
        ],
        "webhookId": "5c3cbc0b-9239-4a17-a8ec-bc8819341e47",
        "typeVersion": 2.1,
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "mergeByFields": {
            "values": [
              {
                "field1": "output",
                "field2": "name"
              }
            ]
          },
          "options": {
            "multipleMatches": "first"
          }
        },
        "id": "92b8d5d5-32fb-44dc-871c-83e6f82af4ce",
        "name": "Check if Label Exists",
        "type": "n8n-nodes-base.compareDatasets",
        "position": [
          2144,
          64
        ],
        "typeVersion": 2.3
      },
      {
        "parameters": {
          "operation": "addLabels",
          "messageId": "={{ $('Extract Email Data').item.json.id }}",
          "labelIds": "={{ $json.different.id.inputB }}"
        },
        "id": "a31515d2-ae09-44b7-814a-a57028fc5722",
        "name": "Apply Label to Email",
        "type": "n8n-nodes-base.gmail",
        "position": [
          2576,
          192
        ],
        "webhookId": "4a35699e-da45-48e9-8e12-d22b2dcca62e",
        "typeVersion": 2.1,
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "resource": "label",
          "operation": "create",
          "name": "={{ $('Store AI Category').item.json.output }}",
          "options": {}
        },
        "id": "51d4188b-2e09-4dc1-9c11-2cc341e4c7da",
        "name": "Apply New Label",
        "type": "n8n-nodes-base.gmail",
        "position": [
          2368,
          -32
        ],
        "webhookId": "a6722fdc-15cb-4796-b82d-53cc23060640",
        "typeVersion": 2.1,
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "operation": "addLabels",
          "messageId": "={{ $('Extract Email Data').item.json.id }}",
          "labelIds": "={{ $json.id }}"
        },
        "id": "2b7d1203-a61e-429f-9119-39f89e968249",
        "name": "Create New Label",
        "type": "n8n-nodes-base.gmail",
        "position": [
          2576,
          -16
        ],
        "webhookId": "9e401ad8-b89c-4015-a3cf-b1000ac51ae1",
        "typeVersion": 2.1,
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "return items.filter(item => {\n  const labels = item.json.labelIds || [];\n  // Exclude if ANY label starts with \"Label_\"\n  return !labels.some(label => label.startsWith(\"Label_\"));\n});"
        },
        "id": "7d4fd936-a9e1-4f47-8171-11d72f02ab67",
        "name": "Filter Emails Without Excluded Labels",
        "type": "n8n-nodes-base.code",
        "position": [
          1568,
          -272
        ],
        "typeVersion": 2
      },
      {
        "parameters": {
          "model": "google/gemini-2.5-flash",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "typeVersion": 1,
        "position": [
          1584,
          1056
        ],
        "id": "423d6527-9467-458c-85ee-e00bae5a5cd0",
        "name": "OpenRouter Chat Model",
        "credentials": {
          "openRouterApi": {
            "id": "dVkSiVlmMOJqjixC",
            "name": "OpenRouter account"
          }
        }
      },
      {
        "parameters": {
          "pollTimes": {
            "item": [
              {
                "mode": "everyMinute"
              }
            ]
          },
          "filters": {}
        },
        "type": "n8n-nodes-base.gmailTrigger",
        "typeVersion": 1.3,
        "position": [
          1280,
          -272
        ],
        "id": "dae88b02-5d0e-4ecf-b6e1-c8aafb9080e6",
        "name": "Gmail Trigger",
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "1b488aff-1743-422c-b796-16f95aaebc92",
                "leftValue": "={{ $('Categorize Email with AI').item.json.output }}",
                "rightValue": "Action Required",
                "operator": {
                  "type": "string",
                  "operation": "equals"
                }
              },
              {
                "id": "75936626-98b0-4d10-8201-5f5f351af18d",
                "leftValue": "={{ $('Categorize Email with AI').item.json.output }}",
                "rightValue": "Inquiry",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              },
              {
                "id": "fa70109e-9841-49f6-a1f8-907714f1cf5a",
                "leftValue": "={{ $('Categorize Email with AI').item.json.output }}",
                "rightValue": "Proposal",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              },
              {
                "id": "df0a3aaf-f6ce-4b67-b73f-1ed0b58b16e1",
                "leftValue": "={{ $('Categorize Email with AI').item.json.output }}",
                "rightValue": "Follow-up Reminder",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              },
              {
                "id": "cb763650-f989-4044-b725-d7318b9580a9",
                "leftValue": "={{ $('Categorize Email with AI').item.json.output }}",
                "rightValue": " Personal",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              },
              {
                "id": "375c0512-4430-4c08-b494-63cbfe036e2d",
                "leftValue": "={{ $('Categorize Email with AI').item.json.output }}",
                "rightValue": "Urgent",
                "operator": {
                  "type": "string",
                  "operation": "equals",
                  "name": "filter.operator.equals"
                }
              }
            ],
            "combinator": "or"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          2816,
          192
        ],
        "id": "412a4d02-cc5f-42b0-8e71-9d260efab95f",
        "name": "If2"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 1
            },
            "conditions": [
              {
                "id": "53849246-ad32-4845-9976-9f9688f5a6f2",
                "operator": {
                  "type": "boolean",
                  "operation": "true",
                  "singleValue": true
                },
                "leftValue": "={{ $json.needsReply }}",
                "rightValue": "true"
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "id": "81b049a6-4885-4d75-83f6-1081b75632fe",
        "name": "If Needs Reply",
        "type": "n8n-nodes-base.if",
        "position": [
          2192,
          656
        ],
        "typeVersion": 2
      },
      {
        "parameters": {
          "jsonSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"needsReply\": {\n      \"type\": \"boolean\"\n      }\n  },\n  \"required\": [\"needsReply\"]\n}\n"
        },
        "id": "3626b13b-d830-4e11-9d0d-f5adf662333e",
        "name": "JSON Parser",
        "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
        "position": [
          2064,
          976
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## Generate a Reply",
          "height": 400.08454375343996,
          "width": 333.19082443588354
        },
        "id": "24fef771-faf6-43cd-8c83-f6cefa8ef83f",
        "name": "Sticky Note2",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          2416,
          576
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## ...as a Draft in the conversation",
          "height": 395,
          "width": 326
        },
        "id": "c8a6528e-5e76-4b10-be98-a87613ee0018",
        "name": "Sticky Note3",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          2768,
          576
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "resource": "draft",
          "subject": "=Re: {{ $('Gmail - Single Message').item.json.subject }}",
          "emailType": "html",
          "message": "={{ \n  $json.text.replace(/\\n/g, \"<br />\\n\") \n  + '<br><br>' \n  + 'Op ' \n  + $('Gmail - Single Message').item.json.headers.date.replace( 'Date: ' , '')\n  + ' schreef ' \n  + $('Gmail - Single Message').item.json.headers.from\n  + ':' \n  + '<br>' \n  + '<blockquote class=\"gmail_quote\" style=\"margin:0 0 0 0.8ex; border-left:1px solid rgb(204,204,204); padding-left:1ex;\">' \n  + $('Gmail - Single Message').item.json.textAsHtml \n  + '</blockquote>' \n}}\n",
          "options": {
            "threadId": "={{ $('Gmail - Single Message').item.json.threadId }}",
            "sendTo": "={{ $('Gmail - Single Message').item.json.headers.from }}"
          }
        },
        "id": "f2d7c252-283e-4122-8b90-e148e20bbd9c",
        "name": "Gmail - Create Draft",
        "type": "n8n-nodes-base.gmail",
        "position": [
          2864,
          688
        ],
        "typeVersion": 2.1,
        "webhookId": "cef45d9a-033c-4fb5-aeaf-2efe782588d2",
        "credentials": {
          "gmailOAuth2": {
            "id": "ziBlmEhw60WaG7KB",
            "name": "Gmail account"
          }
        }
      },
      {
        "parameters": {
          "prompt": "=Subject: {{ $('Gmail - Single Message').item.json.subject }}\nMessage:\n{{ $('Gmail - Single Message').item.json.textAsHtml }}",
          "messages": {
            "messageValues": [
              {
                "message": "Your task is to assess if the message requires a response. Return in JSON format true if it does, false otherwise.\nMarketing emails don't require a response."
              }
            ]
          }
        },
        "id": "e598756b-d48a-49a4-9d6c-d94ddc7e2601",
        "name": "Assess if message needs a reply",
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "position": [
          1920,
          656
        ],
        "typeVersion": 1.3
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=Subject: {{ $('Gmail - Single Message').item.json.subject }}\nMessage: {{ $('Gmail - Single Message').item.json.textAsHtml }}",
          "messages": {
            "messageValues": [
              {
                "message": "You're a helpful personal assistant and your task is to draft replies on my behalf to my incoming emails. My name is Jurriaan. Whenever I provide some text from an email, return an appropriate draft reply for it and nothing else.\nEnsure that the reply is suitable for a professional email setting and addresses the topic in a clear, structured, and detailed manner.\nDo not make things up.\n\nInstructions you need to follow:\n- Reply in the same language as the inbound email.\n- Be concise and maintain a business casual tone.\n- Open and close the email in a kind, proper way.\n- When replying to yes-no questions, draft 2 responses: one affirmative and one negative separated by \" - - - - - - - OR - - - - - - - \"\n- If you don't know an answer, you can leave placeholders like \"[YOUR_ANSWER_HERE]\". You may add some possible answers separated by \" - - - - - - - OR - - - - - - - \"\n- Don't use any special formatting, only plain text.\n"
              }
            ]
          }
        },
        "id": "4fc19d61-9fb6-458f-8279-8033693f209b",
        "name": "Generate email reply",
        "type": "@n8n/n8n-nodes-langchain.chainLlm",
        "position": [
          2464,
          640
        ],
        "typeVersion": 1.4
      },
      {
        "parameters": {},
        "type": "n8n-nodes-base.manualTrigger",
        "typeVersion": 1,
        "position": [
          1120,
          -576
        ],
        "id": "103fd6b0-ba46-4d80-b558-0366ae5c141d",
        "name": "When clicking ‘Execute workflow’"
      },
      {
        "parameters": {
          "workflowId": {
            "__rl": true,
            "value": "z2xoE8Na4uklD4DD",
            "mode": "list",
            "cachedResultName": "Update Workflows on Git"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {},
            "matchingColumns": [],
            "schema": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": true
          },
          "options": {}
        },
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1.2,
        "position": [
          288,
          -720
        ],
        "id": "73d5dbc2-e116-422b-9ef3-c0c543bc696e",
        "name": "Execute: Update Workflows on Git"
      },
      {
        "parameters": {
          "events": [
            "update",
            "activate"
          ]
        },
        "type": "n8n-nodes-base.n8nTrigger",
        "typeVersion": 1,
        "position": [
          112,
          -720
        ],
        "id": "71097861-dda2-4689-ae2e-7a5b8b53740e",
        "name": "Trigger on Activate or Active Workflow Updated"
      },
      {
        "parameters": {
          "content": "Save Workflow to Git:\n- when Activated\n- when saved while active.",
          "height": 336,
          "width": 496
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          16,
          -832
        ],
        "id": "48b51458-273b-479f-8d3a-8eb6e42435c3",
        "name": "Sticky Note1"
      }
    ],
    "connections": {
      "If": {
        "main": [
          [],
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Merge": {
        "main": [
          [
            {
              "node": "Extract Email Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Apply New Label": {
        "main": [
          [
            {
              "node": "Create New Label",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop Over Items": {
        "main": [
          [],
          [
            {
              "node": "Gmail - Single Message",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Create New Label": {
        "main": [
          [
            {
              "node": "If2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Store AI Category": {
        "main": [
          [
            {
              "node": "Check if Label Exists",
              "type": "main",
              "index": 0
            },
            {
              "node": "List All Gmail Labels",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract Email Data": {
        "main": [
          [
            {
              "node": "Categorize Email with AI",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Apply Label to Email": {
        "main": [
          [
            {
              "node": "If2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check if Label Exists": {
        "main": [
          [
            {
              "node": "Apply New Label",
              "type": "main",
              "index": 0
            }
          ],
          [],
          [
            {
              "node": "Apply Label to Email",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "List All Gmail Labels": {
        "main": [
          [
            {
              "node": "Check if Label Exists",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Gmail - Single Message": {
        "main": [
          [
            {
              "node": "If",
              "type": "main",
              "index": 0
            },
            {
              "node": "Merge",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Categorize Email with AI": {
        "main": [
          [
            {
              "node": "Store AI Category",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Gmail - Get All Messages": {
        "main": [
          [
            {
              "node": "Filter Emails Without Excluded Labels",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Filter Emails Without Excluded Labels": {
        "main": [
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenRouter Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "Categorize Email with AI",
              "type": "ai_languageModel",
              "index": 0
            },
            {
              "node": "Assess if message needs a reply",
              "type": "ai_languageModel",
              "index": 0
            },
            {
              "node": "Generate email reply",
              "type": "ai_languageModel",
              "index": 0
            },
            {
              "node": "Assess if message needs a reply",
              "type": "ai_languageModel",
              "index": 1
            }
          ]
        ]
      },
      "Gmail Trigger": {
        "main": [
          [
            {
              "node": "Filter Emails Without Excluded Labels",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If2": {
        "main": [
          [
            {
              "node": "Assess if message needs a reply",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If Needs Reply": {
        "main": [
          [
            {
              "node": "Generate email reply",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "JSON Parser": {
        "ai_outputParser": [
          [
            {
              "node": "Assess if message needs a reply",
              "type": "ai_outputParser",
              "index": 0
            }
          ]
        ]
      },
      "Assess if message needs a reply": {
        "main": [
          [
            {
              "node": "If Needs Reply",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Generate email reply": {
        "main": [
          [
            {
              "node": "Gmail - Create Draft",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Gmail - Create Draft": {
        "main": [
          [
            {
              "node": "Loop Over Items",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When clicking ‘Execute workflow’": {
        "main": [
          [
            {
              "node": "Gmail - Get All Messages",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Trigger on Activate or Active Workflow Updated": {
        "main": [
          [
            {
              "node": "Execute: Update Workflows on Git",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": {
      "node:Schedule Trigger": {
        "recurrenceRules": []
      },
      "node:Gmail Trigger": {
        "Gmail Trigger": {
          "lastTimeChecked": 1756046724,
          "possibleDuplicates": [
            "198dc8a8fcd5277d",
            "198dc78f78103e8d"
          ]
        }
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "d982bb5f-86e5-4b3b-818f-365779a95ec2",
    "triggerCount": 1,
    "tags": [],
    "shared": [
      {
        "createdAt": "2025-08-13T15:36:26.300Z",
        "updatedAt": "2025-08-13T15:36:26.300Z",
        "role": "workflow:owner",
        "workflowId": "N0uW8xSUhcWlaT0A",
        "projectId": "sKh7XMvKoqNv3AgS",
        "project": {
          "createdAt": "2025-08-13T12:38:41.348Z",
          "updatedAt": "2025-08-13T13:46:53.556Z",
          "id": "sKh7XMvKoqNv3AgS",
          "name": "Jurriaan Koops <jurriaan@kaldejo.nl>",
          "type": "personal",
          "icon": null,
          "description": null
        }
      }
    ]
  }
}